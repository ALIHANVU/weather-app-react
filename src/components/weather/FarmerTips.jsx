// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è FarmerTips.jsx —Å —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏ –∏ –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ–º –¥–ª—è –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞

import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import useWeather from '../../hooks/useWeather'
import { generateFarmerTips } from '../../utils/weatherUtils'

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è —Å–æ–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
 * @param {string} tip - –¢–µ–∫—Å—Ç —Å–æ–≤–µ—Ç–∞
 * @returns {string} –ò–∫–æ–Ω–∫–∞ —ç–º–æ–¥–∑–∏
 */
const getTipIcon = (tip) => {
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
  const lowerTip = tip.toLowerCase();
  
  // –°–ª–æ–≤–∞—Ä—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º –∏–∫–æ–Ω–æ–∫
  const keywordIconMap = {
    // –ü–æ–ª–∏–≤ –∏ –≤–æ–¥–∞
    '–ø–æ–ª–∏–≤': 'üíß',
    '–ø–æ–ª–∏–≤–∞–π': 'üöø',
    '–≤–ª–∞–≥': 'üí¶',
    '–≤–æ–¥—ã': 'üåä',
    '–ø–æ–ª–µ–π—Ç–µ': 'üöø',
    '–æ—Ä–æ—à–µ–Ω': 'üí¶',
    
    // –°–æ–ª–Ω—Ü–µ –∏ —Ç–µ–ø–ª–æ
    '—Å–æ–ª–Ω—Ü': '‚òÄÔ∏è',
    '–∂–∞—Ä': 'üîÜ',
    '—Ç–µ–ø–ª': 'üå°Ô∏è',
    '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä': 'üå°Ô∏è',
    
    // –ó–∞—â–∏—Ç–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π
    '–∑–∞—â–∏—Ç': 'üõ°Ô∏è',
    '—É–∫—Ä–æ–π': 'üèïÔ∏è',
    '—É–∫—Ä—ã–≤–∞': 'üèïÔ∏è',
    '—ç–∫—Ä–∞–Ω': '‚õ±Ô∏è',
    
    // –ú—É–ª—å—á–∏—Ä–æ–≤–∞–Ω–∏–µ
    '–º—É–ª—å—á': 'üçÇ',
    '–º—É–ª—å—á–∏—Ä': 'üçÇ',
    
    // –†–∞—Å—Ç–µ–Ω–∏—è –∏ –ø–æ—Å–∞–¥–∫–∞
    '—Ä–∞—Å—Ç': 'üå±',
    '–ø–æ—Å–∞–¥': 'üå±',
    '–ø–æ—Å–µ–≤': 'üåæ',
    '—Å–µ–º–µ–Ω': 'üå∞',
    '–≤—Å—Ö–æ–¥': 'üåø',
    '—Å–∞–∂–µ–Ω—Ü': 'üå±',
    
    // –£–¥–æ–±—Ä–µ–Ω–∏—è –∏ –ø–æ–¥–∫–æ—Ä–º–∫–∞
    '—É–¥–æ–±—Ä': 'üß™',
    '–ø–æ–¥–∫–æ—Ä–º': 'üíä',
    '–ø–∏—Ç–∞—Ç': 'ü•ó',
    
    // –°–æ—Ä–Ω—è–∫–∏ –∏ –≤—Ä–µ–¥–∏—Ç–µ–ª–∏
    '—Å–æ—Ä–Ω—è–∫': 'üßπ',
    '–≤—Ä–µ–¥–∏—Ç–µ–ª': 'üêõ',
    '–±–æ–ª–µ–∑–Ω': 'ü¶†',
    '–≥—Ä–∏–±–∫': 'üçÑ',
    
    // –£—Ä–æ–∂–∞–π
    '—É—Ä–æ–∂–∞–π': 'üçé',
    '—Å–æ–±–∏—Ä–∞–π': 'üß∫',
    '–ø–ª–æ–¥': 'üçÖ',
    
    // –°–µ–∑–æ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
    '–ø–æ–¥–≥–æ—Ç–æ–≤': 'üìÜ',
    '–ø–ª–∞–Ω–∏—Ä': 'üìã',
    '–æ—Å–µ–Ω': 'üçÇ',
    '–∑–∏–º': '‚ùÑÔ∏è',
    '–≤–µ—Å–µ–Ω': 'üå∑',
    '–ª–µ—Ç': '‚òÄÔ∏è',
    
    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    '–æ–±—Ä–µ–∑': '‚úÇÔ∏è',
    '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç': 'üß∞',
    '–æ—Å–º–æ—Ç—Ä': 'üîç',
    
    // –ü–æ—á–≤–∞
    '–ø–æ—á–≤': 'üå∞',
    '–≥—Ä—É–Ω—Ç': 'üèûÔ∏è',
    '–∑–µ–º–ª': 'üåã',
    
    // –ü–æ–≥–æ–¥–∞
    '–¥–æ–∂–¥': 'üåßÔ∏è',
    '–ø—Ä–æ–≥–Ω–æ–∑': 'üìä',
    '–º–æ—Ä–æ–∑': '‚ùÑÔ∏è',
    '—Å–Ω–µ–≥': '‚ùÑÔ∏è',
    '–∑–∞–º–æ—Ä–æ–∑': 'üßä',
    '—Ç—É–º–∞–Ω': 'üå´Ô∏è',
    '–æ–±–ª–∞—á': '‚òÅÔ∏è',
    '–≤–µ—Ç–µ—Ä': 'üí®',
    
    // –ü—Ä–æ—á–µ–µ
    '–æ–±–µ—Å–ø–µ—á': '‚úÖ',
    '–ø—Ä–æ–≤–µ—Ä–∫': '‚ö†Ô∏è',
    '—Å–ª–µ–¥–∏—Ç–µ': 'üëÄ',
    '–∫–æ–Ω—Ç—Ä–æ–ª': 'üëÅÔ∏è',
    '–≤–µ–Ω—Ç–∏–ª—è—Ü': 'üí®',
    '–ø—Ä–æ–≤–µ—Ç': 'üå¨Ô∏è'
  };
  
  // –ò—â–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
  for (const [keyword, icon] of Object.entries(keywordIconMap)) {
    if (lowerTip.includes(keyword)) {
      return icon;
    }
  }
  
  // –ò–∫–æ–Ω–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
  const defaultIcons = ['üåø', 'üå±', 'üåæ', 'üß†', 'üåª', 'üåº', 'üåû', 'üìù'];
  return defaultIcons[Math.floor(Math.random() * defaultIcons.length)];
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤ –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ iOS —Å —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏
 * 
 * @returns {JSX.Element}
 */
const FarmerTips = () => {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const { weatherData } = useWeather()
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤
  const [tips, setTips] = useState([])
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞
  const [selectedTip, setSelectedTip] = useState(null)
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ–≤–µ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  useEffect(() => {
    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≤–µ—Ç–æ–≤
    const loadTips = async () => {
      if (!weatherData || !weatherData.weather) return
      
      try {
        const generatedTips = await generateFarmerTips(weatherData.weather)
        setTips(generatedTips.slice(0, 4)) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 4 —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–≤–µ—Ç–æ–≤:', error)
        setTips([
          '–ü–æ–ª–∏–≤–∞–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏',
          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ—á–≤—ã',
          '–ó–∞—â–∏—â–∞–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –æ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π',
          '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø–µ—Ä–µ–¥ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–∞–±–æ—Ç'
        ])
      }
    }
    
    loadTips()
  }, [weatherData])
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ–≤–µ—Ç–æ–≤, –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  if (!weatherData || !weatherData.weather || tips.length === 0) return null
  
  return (
    <>
      <motion.div
        className="bg-white dark:bg-gray-800 rounded-2xl shadow-sm p-4 mb-4"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ 
          duration: 0.4,
          delay: 0.3,
          ease: [0.175, 0.885, 0.32, 1.275]
        }}
      >
        <h2 className="text-xl font-semibold mb-4">–°–æ–≤–µ—Ç—ã –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤</h2>
        
        <div className="grid grid-cols-2 gap-3">
          <AnimatePresence>
            {tips.map((tip, index) => {
              // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è —Å–æ–≤–µ—Ç–∞
              const icon = getTipIcon(tip);
              
              return (
                <motion.div
                  key={index}
                  className="bg-green-50 dark:bg-green-900/20 rounded-xl p-3 flex cursor-pointer"
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ 
                    duration: 0.3,
                    delay: 0.4 + index * 0.05,
                    ease: "easeOut"
                  }}
                  onClick={() => setSelectedTip({ text: tip, icon: icon })}
                >
                  <div className="w-10 h-10 mr-3 flex-shrink-0 bg-green-100 dark:bg-green-800/30 flex items-center justify-center rounded-full">
                    <span className="text-xl">{icon}</span>
                  </div>
                  <p className="text-sm font-medium leading-tight line-clamp-2 overflow-hidden text-ellipsis">
                    {tip}
                  </p>
                </motion.div>
              );
            })}
          </AnimatePresence>
        </div>
      </motion.div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞ */}
      <AnimatePresence>
        {selectedTip && (
          <motion.div
            className="fixed inset-0 z-50 bg-black/50 backdrop-blur-md flex items-center justify-center p-4"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.2 }}
            onClick={() => setSelectedTip(null)}
          >
            <motion.div
              className="bg-white dark:bg-gray-800 rounded-3xl max-w-md w-full shadow-lg"
              initial={{ scale: 0.9, y: 20, opacity: 0 }}
              animate={{ scale: 1, y: 0, opacity: 1 }}
              exit={{ scale: 0.9, y: 20, opacity: 0 }}
              transition={{ 
                type: 'spring',
                damping: 25,
                stiffness: 300,
                duration: 0.3
              }}
              onClick={(e) => e.stopPropagation()}
            >
              <div className="p-6">
                <div className="w-16 h-16 mb-4 mx-auto bg-green-100 dark:bg-green-800/30 flex items-center justify-center rounded-full">
                  <span className="text-3xl">{selectedTip.icon}</span>
                </div>
                <p className="text-base font-medium text-center">
                  {selectedTip.text}
                </p>
              </div>
              <div className="border-t border-gray-200 dark:border-gray-700">
                <button 
                  onClick={() => setSelectedTip(null)}
                  className="w-full py-3 text-ios-blue font-medium text-center"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  )
}

export default FarmerTips
