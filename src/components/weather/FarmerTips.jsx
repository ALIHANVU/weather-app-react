import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import useWeather from '../../hooks/useWeather'
import { generateFarmerTips } from '../../utils/weatherUtils'

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤ –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ iOS
 * 
 * @returns {JSX.Element}
 */
const FarmerTips = () => {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const { weatherData } = useWeather()
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤
  const [tips, setTips] = useState([])
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ–≤–µ—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  useEffect(() => {
    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–≤–µ—Ç–æ–≤
    const loadTips = async () => {
      if (!weatherData || !weatherData.weather) return
      
      try {
        const generatedTips = await generateFarmerTips(weatherData.weather)
        setTips(generatedTips.slice(0, 4)) // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 4 —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–≤–µ—Ç–æ–≤:', error)
        setTips([
          '–ü–æ–ª–∏–≤–∞–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏',
          '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ—á–≤—ã',
          '–ó–∞—â–∏—â–∞–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –æ—Ç —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π',
          '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –ø–µ—Ä–µ–¥ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–∞–±–æ—Ç'
        ])
      }
    }
    
    loadTips()
  }, [weatherData])
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ–≤–µ—Ç–æ–≤, –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  if (!weatherData || !weatherData.weather || tips.length === 0) return null
  
  // –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Å–æ–≤–µ—Ç–æ–≤
  const tipIcons = [
    'üöø', 'üå±', '‚òÇÔ∏è', 'üå°Ô∏è', 'üåø', 'üåæ', 'üçÉ', 'üå∏'
  ]
  
  return (
    <motion.div
      className="bg-white dark:bg-gray-800 rounded-2xl shadow-sm p-4 mb-4"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ 
        duration: 0.4,
        delay: 0.3,
        ease: [0.175, 0.885, 0.32, 1.275]
      }}
    >
      <h2 className="text-xl font-semibold mb-4">–°–æ–≤–µ—Ç—ã –¥–ª—è —Ñ–µ—Ä–º–µ—Ä–æ–≤</h2>
      
      <div className="grid grid-cols-2 gap-3">
        <AnimatePresence>
          {tips.map((tip, index) => (
            <motion.div
              key={index}
              className="bg-green-50 dark:bg-green-900/20 rounded-xl p-3 flex"
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ 
                duration: 0.3,
                delay: 0.4 + index * 0.05,
                ease: "easeOut"
              }}
            >
              <div className="w-10 h-10 mr-3 flex-shrink-0 bg-green-100 dark:bg-green-800/30 flex items-center justify-center rounded-full">
                <span className="text-xl">{tipIcons[index % tipIcons.length]}</span>
              </div>
              <p className="text-sm font-medium leading-tight">
                {tip.length > 70 ? `${tip.substring(0, 70)}...` : tip}
              </p>
            </motion.div>
          ))}
        </AnimatePresence>
      </div>
    </motion.div>
  )
}

export default FarmerTips
